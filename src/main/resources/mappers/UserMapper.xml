<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.qiuk.dao.UserDao" >
	<resultMap id="BaseResultMap" type="top.qiuk.po.User" >
		<id column="id" property="id" jdbcType="CHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="nick_name" property="nickName" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="CHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Example_Where_Clause" >
		<where >
			<foreach collection="oredCriteria" item="criteria" separator="or" >
				<if test="criteria.valid" >
					<trim prefix="(" suffix=")" prefixOverrides="and" >
						<foreach collection="criteria.criteria" item="criterion" >
							<choose >
								<when test="criterion.noValue" >
                  and ${criterion.condition}
								</when>
								<when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue" >
                  and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause" >
		<where >
			<foreach collection="example.oredCriteria" item="criteria" separator="or" >
				<if test="criteria.valid" >
					<trim prefix="(" suffix=")" prefixOverrides="and" >
						<foreach collection="criteria.criteria" item="criterion" >
							<choose >
								<when test="criterion.noValue" >
                  and ${criterion.condition}
								</when>
								<when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue" >
                  and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List" >
    id, email, nick_name, password, status, create_time
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap" parameterType="top.qiuk.po.UserRepository" >
    select
		<if test="distinct" >
      distinct
		</if>
		<include refid="Base_Column_List" />
    from t_user
		<if test="_parameter != null" >
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null" >
      order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
		<include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=CHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_user
    where id = #{id,jdbcType=CHAR}
	</delete>
	<delete id="deleteByExample" parameterType="top.qiuk.po.UserRepository" >
    delete from t_user
		<if test="_parameter != null" >
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="top.qiuk.po.User" >
    insert into t_user (id, email, nick_name, 
      password, status, create_time
      )
    values (#{id,jdbcType=CHAR}, #{email,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{password,jdbcType=CHAR}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
	</insert>
	<insert id="insertSelective" parameterType="top.qiuk.po.User" >
    insert into t_user
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="id != null" >
        id,
			</if>
			<if test="email != null" >
        email,
			</if>
			<if test="nickName != null" >
        nick_name,
			</if>
			<if test="password != null" >
        password,
			</if>
			<if test="status != null" >
        status,
			</if>
			<if test="createTime != null" >
        create_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="id != null" >
        #{id,jdbcType=CHAR},
			</if>
			<if test="email != null" >
        #{email,jdbcType=VARCHAR},
			</if>
			<if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
			</if>
			<if test="password != null" >
        #{password,jdbcType=CHAR},
			</if>
			<if test="status != null" >
        #{status,jdbcType=INTEGER},
			</if>
			<if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="top.qiuk.po.UserRepository" resultType="java.lang.Integer" >
    select count(*) from t_user
		<if test="_parameter != null" >
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map" >
    update t_user
		<set >
			<if test="record.id != null" >
        id = #{record.id,jdbcType=CHAR},
			</if>
			<if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
			</if>
			<if test="record.nickName != null" >
        nick_name = #{record.nickName,jdbcType=VARCHAR},
			</if>
			<if test="record.password != null" >
        password = #{record.password,jdbcType=CHAR},
			</if>
			<if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
			</if>
			<if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null" >
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map" >
    update t_user
    set id = #{record.id,jdbcType=CHAR},
      email = #{record.email,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=CHAR},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
		<if test="_parameter != null" >
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="top.qiuk.po.User" >
    update t_user
		<set >
			<if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
			</if>
			<if test="password != null" >
        password = #{password,jdbcType=CHAR},
			</if>
			<if test="status != null" >
        status = #{status,jdbcType=INTEGER},
			</if>
			<if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
    where id = #{id,jdbcType=CHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="top.qiuk.po.User" >
    update t_user
    set email = #{email,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      password = #{password,jdbcType=CHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=CHAR}
	</update>
</mapper>